"use client"
import React, { useEffect, useState } from "react";
import { type NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import { useSignIn } from "@clerk/clerk-react";
import { useRouter } from "next/navigation";
import { useSession, SignIn } from "@clerk/nextjs";
import Error from "next/error";
const SignInForm = () => {
    const { isLoaded, signIn, setActive } = useSignIn();
    
    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>): Promise<void> => {
        event.preventDefault();
      console.log(event)
      if (event.target instanceof HTMLFormElement) {
        const formData = new FormData(event.target);
        const emailAddress = formData.get("email");
        const password = formData.get("password");
  
        if (!signIn) return;
        if (!emailAddress || !password) return;
  
        const response = await signIn
          .create({
            identifier: emailAddress.toString(),
            password: password.toString(),
          })
          .then(async (result) => {
            console.log("RESULT", result)
            if (result.status === "complete") {
              await setActive({ session: result.createdSessionId });
            } else {
              console.log(result);
            }
          })
          .catch((err) => console.error("error", err));
  
        console.log("RESPONSE: ", response);
      }
    };
  
    if (!isLoaded) {
      // Handle loading state
      return null;
    }
  
    return (
      <form
        onSubmit={ async (event) => await handleSubmit(event)}
        className="rounded-md border border-gray-500 bg-white pb-12 pl-10 pr-10 pt-12 shadow-login"
      >
        <div className="mb-3 flex flex-col"> 
          <label
            htmlFor="email"
            className="mb-2 font-sans text-base font-medium text-green"
          >
            Email
          </label>
          <input
            id="email"
            name="email"
            type="email"
            className="rounded-md border border-gray-300 pb-1 pl-3 pr-3 pt-1"
            required
          />
        </div>
        <div className="mb-3 flex flex-col">
          <label
            htmlFor="password"
            className="mb-2 font-sans text-base font-medium text-green"
          >
            Password
          </label>
          <input
            id="password"
            name="password"
            type="password"
            className="rounded-md border border-gray-300 pb-1 pl-3 pr-3 pt-1"
            required
          />
        </div>
        <button className="mb-4 mt-4 w-full rounded-md bg-light-green p-2 font-sans text-base font-medium text-green transition hover:bg-green hover:text-white">
          Sign in
        </button>
        <Link
          href="/forgot-password"
          className="mb-2 font-sans text-base font-medium text-green"
        >
          Forgot password?
        </Link>
      </form>
    );
  };

const Page:NextPage = () => {
  //   const { session } = useSession();
  // const router = useRouter();

  // useEffect(() => {
  //   if (session) {
  //     try {
  //       router.push("/")
  //     } catch(error: any) {
  //       console.error("Error during navigation:", error);
  //     };
  //   }
  // }, [session, router]);

  

  return (
    <div>
      <Head>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        <main
          className="h-screen w-full bg-cover bg-center"
          // style={{ backgroundImage: "url('/bg-login.png')" }}
        >
          <div className="flex h-full w-full flex-row justify-center align-middle">
            <div className="flex h-full w-128 flex-col justify-center align-middle">
              <div>
                <SignIn  />
                {/* <SignInForm /> */}
              </div>
            </div>
          </div>
        </main>
    </div>
  );
}

export default Page